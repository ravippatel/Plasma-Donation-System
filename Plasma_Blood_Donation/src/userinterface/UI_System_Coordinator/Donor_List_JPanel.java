/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI_System_Coordinator;

import Plasma_DB4OUtil.DB4OUtil;
import Plasma.EcoSystem;
import Plasma_Enterprise.Enterprise;
import Plasma_Enterprise.Enterprise_Dir;
import Plasma_Network_Cities.Network_Cities;
import Plasma_Association.Association;
import Plasma_Association.Pathologist_Association;
import Plasma_People.Donor;
import Plasma_User_Account.User_Acc;
import Plasma_Work_Queue.System_Coordinator_Work_Request;
import Plasma_Work_Queue.Work_Req;
import HomePages.TableFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author RST
 */
public class Donor_List_JPanel extends javax.swing.JPanel {

    //Creates new form Donor_List_JPanel
     
    private EcoSystem system;
    private Enterprise_Dir enterpriseDirectory;
    private Network_Cities network;
    private User_Acc userAccount;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();

    public Donor_List_JPanel(User_Acc userAccount, EcoSystem system, Network_Cities network) {
        initComponents();
        this.userAccount = userAccount;
        this.system = system;
        this.network = network;

        tblDonors.getTableHeader().setDefaultRenderer(new TableFormat());
        tblHospital.getTableHeader().setDefaultRenderer(new TableFormat());
        tblAssignment.getTableHeader().setDefaultRenderer(new TableFormat());

        Donor_Table_populate();
        Hospital_Table_populate();
        Request_Table_populate();
    }

    //VIEW ALL THE DONOR DETAILS IN A TABLE
    private void Donor_Table_populate() {
        DefaultTableModel D = (DefaultTableModel) tblDonors.getModel();
        D.setRowCount(0);

        for (Donor donor : system.getDonorDir().getDonor_List()) {
            Object row[] = new Object[4];
            row[0] = donor;
            row[1] = donor.getName();
            row[2] = donor.getMobile();
            row[3] = donor.getRecent_status();

            D.addRow(row);
        }
    }

    //VIEW ALL THE HOSPITAL DETAILS IN A TABLE
    private void Hospital_Table_populate() {

        DefaultTableModel D = (DefaultTableModel) tblHospital.getModel();
        D.setRowCount(0);

        System.out.println("List of enterprises:");
        System.out.println("List of enterprises ends");
        System.out.println(network.getCity_name());
        for (Enterprise enterprise : network.getEnterprise_Dir().getEnt_List()) {
            if (enterprise.getEnterprise_type().toString().equals("Hospital")) {
                System.out.println("Hosp");
                Object[] row = new Object[2];
                row[0] = enterprise;
                row[1] = enterprise.getName();

                D.addRow(row);
            }
        }
    }

    //VIEW ALL THE REQUEST DETAILS IN A TABLE
    private void Request_Table_populate() {

        DefaultTableModel table = (DefaultTableModel) tblAssignment.getModel();

        table.setRowCount(0);

        for (Work_Req request : userAccount.getWorkQueue().getWork_Req_List()) {
            Object[] row = new Object[6];
            row[0] = request;

            row[1] = request.getDonor();
            row[2] = request.getSummary();
            row[3] = request.getEnterprise();
            row[4] = request.getStatus();
            row[5] = request.getAction_Date();
            table.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDonors = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnAssign = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblHospital = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblAssignment = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTable1);

        setBackground(new java.awt.Color(255, 204, 204));

        tblDonors.setBackground(new java.awt.Color(102, 0, 102));
        tblDonors.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        tblDonors.setForeground(new java.awt.Color(255, 255, 255));
        tblDonors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UID", "NAME", "CONTACT", "STATUS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDonors.setGridColor(new java.awt.Color(0, 0, 0));
        tblDonors.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblDonors.setRowHeight(30);
        tblDonors.setShowVerticalLines(false);
        tblDonors.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDonorsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDonors);

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel1.setText("AVAILABLE APPROVED DONOR LIST");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setText("ASSIGN HOSPITAL");

        btnAssign.setBackground(new java.awt.Color(31, 31, 31));
        btnAssign.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        btnAssign.setText("ASSIGN");
        btnAssign.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assign_button(evt);
            }
        });

        tblHospital.setBackground(new java.awt.Color(102, 0, 102));
        tblHospital.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        tblHospital.setForeground(new java.awt.Color(255, 255, 255));
        tblHospital.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "HOSPITAL NAME"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHospital.setGridColor(new java.awt.Color(0, 0, 0));
        tblHospital.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblHospital.setRowHeight(30);
        tblHospital.setShowVerticalLines(false);
        jScrollPane2.setViewportView(tblHospital);

        tblAssignment.setBackground(new java.awt.Color(102, 0, 102));
        tblAssignment.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        tblAssignment.setForeground(new java.awt.Color(255, 255, 255));
        tblAssignment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "REQUEST NUMBER", "DONOR UID", "SUMMARY", "HOSPITAL", "STATUS", "REQUESTED DATE"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAssignment.setGridColor(new java.awt.Color(0, 0, 0));
        tblAssignment.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tblAssignment.setRowHeight(30);
        tblAssignment.setShowVerticalLines(false);
        jScrollPane4.setViewportView(tblAssignment);

        jPanel3.setBackground(new java.awt.Color(31, 31, 31));
        jPanel3.setPreferredSize(new java.awt.Dimension(926, 70));

        jLabel25.setFont(new java.awt.Font("Cambria Math", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("DONORS CONNECTION TO HOSPITAL");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1536, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 666, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(176, 176, 176))
            .addGroup(layout.createSequentialGroup()
                .addGap(185, 185, 185)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 1049, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(27, 27, 27)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    //ASSIGN DONOR TO A HOSPITAL
    private void assign_button(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assign_button
        int row = tblDonors.getSelectedRow();
        int row1 = tblHospital.getSelectedRow();

        if (row < 0) {
            JOptionPane.showMessageDialog(null, new JLabel("Please select a row from the Donors Table"), "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (row1 < 0) {
            JOptionPane.showMessageDialog(null, new JLabel("Please select a row from the Hospital Table"), "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            Work_Req r = new System_Coordinator_Work_Request();

            {
                r.setAction_Date(new Date());
                r.setAssigned("Hospital Pool");
                r.setSummary("Requested for Donation");
                r.setStatus("Assigned to Hospital"); // STATUS CHANGED
                r.setUser_Acc(userAccount);
                r.setDonor((Donor) tblDonors.getValueAt(row, 0));
                r.getDonor().setRecent_status("Assigned to Hospital"); // DONOR'S STATUS CHANGED
                r.setEnterprise((Enterprise) tblHospital.getValueAt(row1, 0));

                Association org = null;
                Enterprise e = (Enterprise) tblHospital.getValueAt(row1, 0);
                for (Association organization : e.getAssociationDirectory().getAssociationList()) {
                    if (organization instanceof Pathologist_Association) {
                        org = organization;
                        break;
                    }
                }

                if (org != null) {
                    org.getWorkQueue().getWork_Req_List().add(r);
                    System.out.println(org.getName());
                    userAccount.getWorkQueue().getWork_Req_List().add(r);
                    Donor_Table_populate();
                    Request_Table_populate();
                    JOptionPane.showMessageDialog(null, new JLabel("Request sent successfully!!!!!!"),
                             "Info", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "No organization present", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        dB4OUtil.storeSystem(system);
    }//GEN-LAST:event_assign_button

    private void tblDonorsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDonorsMouseClicked
    }//GEN-LAST:event_tblDonorsMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tblAssignment;
    private javax.swing.JTable tblDonors;
    private javax.swing.JTable tblHospital;
    // End of variables declaration//GEN-END:variables

}
